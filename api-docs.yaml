openapi: '3.0.2'
info:
  title: Photos API
  description: 'photos.gkrupp.hu'
  version: '0.1.0'
servers:
  - url: https://api.photos.gkrupp.hu


components:
  parameters:
    photoId:
      name: photoId
      in: path
      required: true
      description: Unique identifier of a photo
      schema:
        type: string
        minLength: 128
        maxLength: 128
    photoSize:
      name: size
      in: query
      required: false
      description: Photo size
      schema:
        type: string
        default: preview
        enum:
          - original
          - preview
          - tile
          - largeicon
          - icon
    albumId:
      name: albumId
      in: path
      required: true
      description: Unique identifier of an album
      schema:
        type: string
        minLength: 64
        maxLength: 64
    includeId:
      name: includeId
      in: query
      required: false
      description: Include `id` field
      schema:
        type: boolean
        default: false
    details:
      name: details
      in: query
      required: false
      description: Metadata details
      schema:
        type: string
        default: basic
        enum:
          - minimal
          - basic
          - all
    skip:
      name: skip
      in: query
      required: false
      description: Pagination offset
      schema:
        type: number
        default: 0
    limit:
      name: limit
      in: query
      required: false
      description: Pagination limit
      schema:
        type: number
        default: 60
        maximum: 60
  responses:
    photo:
      description: Photo
      content:
        image/*:
          schema:
            type: string
            format: binary


tags:
  - name: content
    description: Static Content Provider
  - name: photo
    description: Photo API
  - name: album
    description: Album API


paths:

  /content/photo/{id}:
    get:
      tags:
        - content
      summary: Serve photo by ID
      description: Serves a photo file referenced by its ID
      operationId: contentPhotoId
      parameters:
      - $ref: '#/components/parameters/photoId'
      - $ref: '#/components/parameters/photoSize'
      responses:
        200:
          $ref: '#/components/responses/photo'
        400:
          description: Malformed {photoId}
        404:
          description: Photo not found


  /photo/{id}:
    get:
      tags:
        - photo
      summary: Photo metadata by ID
      description: Return a photo's metadata referenced by its ID
      operationId: photoId
      parameters:
      - $ref: '#/components/parameters/photoId'
      - $ref: '#/components/parameters/details'
      - $ref: '#/components/parameters/includeId'
      responses:
        200:
          description: Photo object
        400:
          description: Malformed {photoId}
        404:
          description: Photo not found
  
  /photo/in/{albumId}:
    get:
      tags:
        - photo
      summary: Photos metadata by album
      description: Returns photos' metadata referenced by their {albumId}
      operationId: photosByAlbumId
      parameters:
      - $ref: '#/components/parameters/albumId'
      - $ref: '#/components/parameters/details'
      - $ref: '#/components/parameters/skip'
      - $ref: '#/components/parameters/limit'
      responses:
        200:
          description: Array of Photo object
        400:
          description: Malformed {albumId}


  /album/{id}:
    get:
      tags:
        - album
      summary: Album metadata by ID
      description: Returns an album's metadata referenced by its ID
      operationId: albumId
      parameters:
      - $ref: '#/components/parameters/albumId'
      - $ref: '#/components/parameters/details'
      - $ref: '#/components/parameters/includeId'
      responses:
        200:
          description: Album object
        400:
          description: Malformed {albumId}
        404:
          description: Album not found
  
  /album/in/{albumId}:
    get:
      tags:
        - album
      summary: Albums metadata by album
      description: Returns albums' metadata referenced by their {albumId}
      operationId: albumsByAlbumId
      parameters:
      - $ref: '#/components/parameters/albumId'
      - $ref: '#/components/parameters/details'
      - $ref: '#/components/parameters/skip'
      - $ref: '#/components/parameters/limit'
      responses:
        200:
          description: Array of Album object
        400:
          description: Malformed {albumId}